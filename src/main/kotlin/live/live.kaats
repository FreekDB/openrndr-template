//@file:Suppress("UNUSED_LAMBDA_EXPRESSION")
//
//package live
//
//import org.openrndr.Program
//import org.openrndr.color.ColorRGBa
//import org.openrndr.draw.isolatedWithTarget
//import org.openrndr.draw.loadFont
//import org.openrndr.draw.renderTarget
//import org.openrndr.draw.shadeStyle
//import org.openrndr.extra.fx.blur.BoxBlur
//import org.openrndr.extra.noise.simplex
//import org.openrndr.math.Vector2
//import org.openrndr.shape.contour
//
//{ program: Program ->
//    val font = loadFont("data/fonts/IBMPlexMono-Regular.ttf", 400.0)
//
//    program.apply {
//        //extend(ScreenRecorder())
//
//        val offscreen = renderTarget(width, height) {
//            colorBuffer()
//            depthBuffer()
//        }
//
//        val blur = BoxBlur()
//
//        extend {
//
//            blur.window = 2
//            blur.apply(offscreen.colorBuffer(0), offscreen.colorBuffer(0))
//
//            drawer.isolatedWithTarget(offscreen) {
//                backgroundColor = ColorRGBa(0.925, 0.898, 0.807)
//
//                drawer.shadeStyle = shadeStyle {
//                    vertexTransform = "x_position.x += 10.0 * sin(x_position.y + 4.0 * p_time);" +
//                            "x_position.y += 10.0 * sin(a_position.x + 3.0 * p_time);"
//                    fragmentTransform =
//                        "float c = cos(va_position.x * 0.04 + p_time) * cos(va_position.y * 0.04) * 0.2 + 0.8;" +
//                                "x_fill.rgb *= vec3(c);"
//                    parameter("time", seconds)
//                }
//                drawer.fill = ColorRGBa(0.772, 0.878, 0.862)
//                drawer.stroke = null
//                val c = contour {
//                    moveTo(Vector2(50.0, 50.0))
//                    lineTo(Vector2(150.0, 50.0))
//                    lineTo(Vector2(60.0, 150.0))
//                    lineTo(Vector2(50.0, 50.0))
//                    close()
//                }
//                drawer.contour(c)
//
//                drawer.fill = ColorRGBa(0.878, 0.556, 0.474)
//                drawer.translate(
//                    width * 0.5 + width * 0.2 * simplex(123, 0.2, 0.8, seconds),
//                    height * 0.5
//                )
//                drawer.circle(0.0, 0.0, 100.0)
//
//                drawer.fill = ColorRGBa.WHITE
//                drawer.fontMap = font
//                drawer.text(c.segments.size.toString(), -100.0, 100.0)
//
//                drawer.point(0.0, 30.0);
//            }
//
//            drawer.image(offscreen.colorBuffer(0))
//        }
//    }
//}
